{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\n\nvar defaultButton = function defaultButton(props) {\n  return React.createElement('button', _extends({\n    type: 'button'\n  }, props, {\n    className: '-btn'\n  }), props.children);\n};\n\nvar ReactTablePagination = function (_Component) {\n  _inherits(ReactTablePagination, _Component);\n\n  function ReactTablePagination(props) {\n    _classCallCheck(this, ReactTablePagination);\n\n    var _this = _possibleConstructorReturn(this, (ReactTablePagination.__proto__ || Object.getPrototypeOf(ReactTablePagination)).call(this, props));\n\n    _this.getSafePage = _this.getSafePage.bind(_this);\n    _this.changePage = _this.changePage.bind(_this);\n    _this.applyPage = _this.applyPage.bind(_this);\n    _this.state = {\n      page: props.page\n    };\n    return _this;\n  }\n\n  _createClass(ReactTablePagination, [{\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.page !== this.props.page && prevState.page !== this.state.page) {\n        // this is probably safe because we only update when old/new state.page are different\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({\n          page: this.props.page\n        });\n      }\n    }\n  }, {\n    key: 'getSafePage',\n    value: function getSafePage(page) {\n      if (Number.isNaN(page)) {\n        page = this.props.page;\n      }\n\n      return Math.min(Math.max(page, 0), this.props.pages - 1);\n    }\n  }, {\n    key: 'changePage',\n    value: function changePage(page) {\n      page = this.getSafePage(page);\n      this.setState({\n        page: page\n      });\n\n      if (this.props.page !== page) {\n        this.props.onPageChange(page);\n      }\n    }\n  }, {\n    key: 'applyPage',\n    value: function applyPage(e) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      var page = this.state.page;\n      this.changePage(page === '' ? this.props.page : page);\n    }\n  }, {\n    key: 'getPageJumpProperties',\n    value: function getPageJumpProperties() {\n      var _this2 = this;\n\n      return {\n        onKeyPress: function onKeyPress(e) {\n          if (e.which === 13 || e.keyCode === 13) {\n            _this2.applyPage();\n          }\n        },\n        onBlur: this.applyPage,\n        value: this.state.page === '' ? '' : this.state.page + 1,\n        onChange: function onChange(e) {\n          var val = e.target.value;\n          var page = val - 1;\n\n          if (val === '') {\n            return _this2.setState({\n              page: val\n            });\n          }\n\n          _this2.setState({\n            page: _this2.getSafePage(page)\n          });\n        },\n        inputType: this.state.page === '' ? 'text' : 'number',\n        pageJumpText: this.props.pageJumpText\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props = this.props,\n          pages = _props.pages,\n          page = _props.page,\n          showPageSizeOptions = _props.showPageSizeOptions,\n          pageSizeOptions = _props.pageSizeOptions,\n          pageSize = _props.pageSize,\n          showPageJump = _props.showPageJump,\n          canPrevious = _props.canPrevious,\n          canNext = _props.canNext,\n          onPageSizeChange = _props.onPageSizeChange,\n          className = _props.className,\n          PreviousComponent = _props.PreviousComponent,\n          NextComponent = _props.NextComponent,\n          renderPageJump = _props.renderPageJump,\n          renderCurrentPage = _props.renderCurrentPage,\n          renderTotalPagesCount = _props.renderTotalPagesCount,\n          renderPageSizeOptions = _props.renderPageSizeOptions;\n      return React.createElement('div', {\n        className: classnames(className, '-pagination'),\n        style: this.props.style\n      }, React.createElement('div', {\n        className: '-previous'\n      }, React.createElement(PreviousComponent, {\n        onClick: function onClick() {\n          if (!canPrevious) return;\n\n          _this3.changePage(page - 1);\n        },\n        disabled: !canPrevious\n      }, this.props.previousText)), React.createElement('div', {\n        className: '-center'\n      }, React.createElement('span', {\n        className: '-pageInfo'\n      }, this.props.pageText, ' ', showPageJump ? renderPageJump(this.getPageJumpProperties()) : renderCurrentPage(page), ' ', this.props.ofText, ' ', renderTotalPagesCount(pages)), showPageSizeOptions && renderPageSizeOptions({\n        pageSize: pageSize,\n        rowsSelectorText: this.props.rowsSelectorText,\n        pageSizeOptions: pageSizeOptions,\n        onPageSizeChange: onPageSizeChange,\n        rowsText: this.props.rowsText\n      })), React.createElement('div', {\n        className: '-next'\n      }, React.createElement(NextComponent, {\n        onClick: function onClick() {\n          if (!canNext) return;\n\n          _this3.changePage(page + 1);\n        },\n        disabled: !canNext\n      }, this.props.nextText)));\n    }\n  }]);\n\n  return ReactTablePagination;\n}(Component);\n\nReactTablePagination.defaultProps = {\n  PreviousComponent: defaultButton,\n  NextComponent: defaultButton,\n  renderPageJump: function renderPageJump(_ref) {\n    var onChange = _ref.onChange,\n        value = _ref.value,\n        onBlur = _ref.onBlur,\n        onKeyPress = _ref.onKeyPress,\n        inputType = _ref.inputType,\n        pageJumpText = _ref.pageJumpText;\n    return React.createElement('div', {\n      className: '-pageJump'\n    }, React.createElement('input', {\n      'aria-label': pageJumpText,\n      type: inputType,\n      onChange: onChange,\n      value: value,\n      onBlur: onBlur,\n      onKeyPress: onKeyPress\n    }));\n  },\n  renderCurrentPage: function renderCurrentPage(page) {\n    return React.createElement('span', {\n      className: '-currentPage'\n    }, page + 1);\n  },\n  renderTotalPagesCount: function renderTotalPagesCount(pages) {\n    return React.createElement('span', {\n      className: '-totalPages'\n    }, pages || 1);\n  },\n  renderPageSizeOptions: function renderPageSizeOptions(_ref2) {\n    var pageSize = _ref2.pageSize,\n        pageSizeOptions = _ref2.pageSizeOptions,\n        rowsSelectorText = _ref2.rowsSelectorText,\n        onPageSizeChange = _ref2.onPageSizeChange,\n        rowsText = _ref2.rowsText;\n    return React.createElement('span', {\n      className: 'select-wrap -pageSizeOptions'\n    }, React.createElement('select', {\n      'aria-label': rowsSelectorText,\n      onChange: function onChange(e) {\n        return onPageSizeChange(Number(e.target.value));\n      },\n      value: pageSize\n    }, pageSizeOptions.map(function (option, i) {\n      return (// eslint-disable-next-line react/no-array-index-key\n        React.createElement('option', {\n          key: i,\n          value: option\n        }, option + ' ' + rowsText)\n      );\n    })));\n  }\n};\nexport default ReactTablePagination;","map":{"version":3,"sources":["../src/pagination.js"],"names":["defaultButton","props","children","ReactTablePagination","Component","defaultProps","PreviousComponent","NextComponent","renderPageJump","onChange","value","onBlur","onKeyPress","inputType","pageJumpText","renderCurrentPage","page","renderTotalPagesCount","pages","renderPageSizeOptions","pageSize","pageSizeOptions","rowsSelectorText","onPageSizeChange","rowsText","Number","e","option","prevProps","prevState","Math","val","showPageSizeOptions","showPageJump","canPrevious","canNext","className","classnames","previousText","nextText"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport classnames from 'classnames'\n\nconst defaultButton = props => (\n  <button type=\"button\" {...props} className=\"-btn\">\n    {props.children}\n  </button>\n)\n\nexport default class ReactTablePagination extends Component {\n  static defaultProps = {\n    PreviousComponent: defaultButton,\n    NextComponent: defaultButton,\n    renderPageJump: ({\n      onChange, value, onBlur, onKeyPress, inputType, pageJumpText,\n    }) => (\n      <div className=\"-pageJump\">\n        <input\n          aria-label={pageJumpText}\n          type={inputType}\n          onChange={onChange}\n          value={value}\n          onBlur={onBlur}\n          onKeyPress={onKeyPress}\n        />\n      </div>\n    ),\n    renderCurrentPage: page => <span className=\"-currentPage\">{page + 1}</span>,\n    renderTotalPagesCount: pages => <span className=\"-totalPages\">{pages || 1}</span>,\n    renderPageSizeOptions: ({\n      pageSize,\n      pageSizeOptions,\n      rowsSelectorText,\n      onPageSizeChange,\n      rowsText,\n    }) => (\n      <span className=\"select-wrap -pageSizeOptions\">\n        <select\n          aria-label={rowsSelectorText}\n          onChange={e => onPageSizeChange(Number(e.target.value))}\n          value={pageSize}\n        >\n          {pageSizeOptions.map((option, i) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <option key={i} value={option}>\n              {`${option} ${rowsText}`}\n            </option>\n          ))}\n        </select>\n      </span>\n    ),\n  }\n\n  constructor (props) {\n    super(props)\n\n    this.getSafePage = this.getSafePage.bind(this)\n    this.changePage = this.changePage.bind(this)\n    this.applyPage = this.applyPage.bind(this)\n\n    this.state = {\n      page: props.page,\n    }\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    if (prevProps.page !== this.props.page && prevState.page !== this.state.page) {\n      // this is probably safe because we only update when old/new state.page are different\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        page: this.props.page,\n      })\n    }\n  }\n\n  getSafePage (page) {\n    if (Number.isNaN(page)) {\n      page = this.props.page\n    }\n    return Math.min(Math.max(page, 0), this.props.pages - 1)\n  }\n\n  changePage (page) {\n    page = this.getSafePage(page)\n    this.setState({ page })\n    if (this.props.page !== page) {\n      this.props.onPageChange(page)\n    }\n  }\n\n  applyPage (e) {\n    if (e) {\n      e.preventDefault()\n    }\n    const page = this.state.page\n    this.changePage(page === '' ? this.props.page : page)\n  }\n\n  getPageJumpProperties () {\n    return {\n      onKeyPress: e => {\n        if (e.which === 13 || e.keyCode === 13) {\n          this.applyPage()\n        }\n      },\n      onBlur: this.applyPage,\n      value: this.state.page === '' ? '' : this.state.page + 1,\n      onChange: e => {\n        const val = e.target.value\n        const page = val - 1\n        if (val === '') {\n          return this.setState({ page: val })\n        }\n        this.setState({ page: this.getSafePage(page) })\n      },\n      inputType: this.state.page === '' ? 'text' : 'number',\n      pageJumpText: this.props.pageJumpText,\n    }\n  }\n\n  render () {\n    const {\n      // Computed\n      pages,\n      // Props\n      page,\n      showPageSizeOptions,\n      pageSizeOptions,\n      pageSize,\n      showPageJump,\n      canPrevious,\n      canNext,\n      onPageSizeChange,\n      className,\n      PreviousComponent,\n      NextComponent,\n      renderPageJump,\n      renderCurrentPage,\n      renderTotalPagesCount,\n      renderPageSizeOptions,\n    } = this.props\n\n    return (\n      <div className={classnames(className, '-pagination')} style={this.props.style}>\n        <div className=\"-previous\">\n          <PreviousComponent\n            onClick={() => {\n              if (!canPrevious) return\n              this.changePage(page - 1)\n            }}\n            disabled={!canPrevious}\n          >\n            {this.props.previousText}\n          </PreviousComponent>\n        </div>\n        <div className=\"-center\">\n          <span className=\"-pageInfo\">\n            {this.props.pageText}{' '}\n            {showPageJump ? renderPageJump(this.getPageJumpProperties()) : renderCurrentPage(page)}{' '}\n            {this.props.ofText} {renderTotalPagesCount(pages)}\n          </span>\n          {showPageSizeOptions &&\n            renderPageSizeOptions({\n              pageSize,\n              rowsSelectorText: this.props.rowsSelectorText,\n              pageSizeOptions,\n              onPageSizeChange,\n              rowsText: this.props.rowsText,\n            })}\n        </div>\n        <div className=\"-next\">\n          <NextComponent\n            onClick={() => {\n              if (!canNext) return\n              this.changePage(page + 1)\n            }}\n            disabled={!canNext}\n          >\n            {this.props.nextText}\n          </NextComponent>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}